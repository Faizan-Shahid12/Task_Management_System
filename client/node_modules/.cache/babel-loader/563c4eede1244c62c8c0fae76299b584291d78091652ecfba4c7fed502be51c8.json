{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Wed_Development\\\\task-manager_2\\\\client\\\\src\\\\context\\\\TaskContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/createContext();\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const fetchTasks = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      const response = await axios.get(\"/api/tasks\");\n      setTasks(response.data.tasks || response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to fetch tasks\";\n      setError(message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createTask = async taskData => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      const response = await axios.post(\"/api/tasks\", taskData);\n      const newTask = response.data.task || response.data;\n      setTasks([...tasks, newTask]);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Failed to create task\";\n      setError(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateTask = async (id, taskData) => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      const response = await axios.put(`/api/tasks/${id}`, taskData);\n      const updatedTask = response.data.task || response.data;\n      setTasks(tasks.map(task => task.id === id ? updatedTask : task));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Failed to update task\";\n      setError(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteTask = async id => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      await axios.delete(`/api/tasks/${id}`);\n      setTasks(tasks.filter(task => task.id !== id));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Failed to delete task\";\n      setError(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const toggleTaskStatus = async id => {\n    try {\n      const response = await axios.patch(`/api/tasks/${id}/toggle`);\n      const updatedTask = response.data.task || response.data;\n      setTasks(tasks.map(task => task.id === id ? updatedTask : task));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || \"Failed to toggle task status\";\n      setError(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const clearError = () => {\n    setError(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      loading,\n      error,\n      fetchTasks,\n      createTask,\n      updateTask,\n      deleteTask,\n      toggleTaskStatus,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskProvider, \"atsbz1/THQbuzidF10mF9Jd9Urw=\");\n_c = TaskProvider;\nexport const useTask = () => {\n  _s2();\n  const context = useContext(TaskContext);\n  if (!context) {\n    throw new Error(\"useTask must be used within a TaskProvider\");\n  }\n  return context;\n};\n_s2(useTask, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","axios","jsxDEV","_jsxDEV","TaskContext","TaskProvider","children","tasks","setTasks","loading","setLoading","error","setError","fetchTasks","response","get","data","_error$response","_error$response$data","message","createTask","taskData","post","newTask","task","success","_error$response2","_error$response2$data","updateTask","id","put","updatedTask","map","_error$response3","_error$response3$data","deleteTask","delete","filter","_error$response4","_error$response4$data","toggleTaskStatus","patch","_error$response5","_error$response5$data","clearError","Provider","value","fileName","lineNumber","columnNumber","_c","useTask","context","Error","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Wed_Development/task-manager_2/client/src/context/TaskContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState } from \"react\"\nimport axios from \"axios\"\n\nconst TaskContext = createContext()\n\nexport const TaskProvider = ({ children }) => {\n  const [tasks, setTasks] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  const fetchTasks = async () => {\n    try {\n      setLoading(true)\n      setError(\"\")\n\n      const response = await axios.get(\"/api/tasks\")\n      setTasks(response.data.tasks || response.data)\n    } catch (error) {\n      const message = error.response?.data?.message || \"Failed to fetch tasks\"\n      setError(message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const createTask = async (taskData) => {\n    try {\n      setLoading(true)\n      setError(\"\")\n\n      const response = await axios.post(\"/api/tasks\", taskData)\n      const newTask = response.data.task || response.data\n      setTasks([...tasks, newTask])\n\n      return { success: true }\n    } catch (error) {\n      const message = error.response?.data?.message || \"Failed to create task\"\n      setError(message)\n      return { success: false, message }\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const updateTask = async (id, taskData) => {\n    try {\n      setLoading(true)\n      setError(\"\")\n\n      const response = await axios.put(`/api/tasks/${id}`, taskData)\n      const updatedTask = response.data.task || response.data\n      setTasks(tasks.map((task) => (task.id === id ? updatedTask : task)))\n\n      return { success: true }\n    } catch (error) {\n      const message = error.response?.data?.message || \"Failed to update task\"\n      setError(message)\n      return { success: false, message }\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const deleteTask = async (id) => {\n    try {\n      setLoading(true)\n      setError(\"\")\n\n      await axios.delete(`/api/tasks/${id}`)\n      setTasks(tasks.filter((task) => task.id !== id))\n\n      return { success: true }\n    } catch (error) {\n      const message = error.response?.data?.message || \"Failed to delete task\"\n      setError(message)\n      return { success: false, message }\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const toggleTaskStatus = async (id) => {\n    try {\n      const response = await axios.patch(`/api/tasks/${id}/toggle`)\n      const updatedTask = response.data.task || response.data\n      setTasks(tasks.map((task) => (task.id === id ? updatedTask : task)))\n\n      return { success: true }\n    } catch (error) {\n      const message = error.response?.data?.message || \"Failed to toggle task status\"\n      setError(message)\n      return { success: false, message }\n    }\n  }\n\n  const clearError = () => {\n    setError(\"\")\n  }\n\n  return (\n    <TaskContext.Provider\n      value={{\n        tasks,\n        loading,\n        error,\n        fetchTasks,\n        createTask,\n        updateTask,\n        deleteTask,\n        toggleTaskStatus,\n        clearError,\n      }}\n    >\n      {children}\n    </TaskContext.Provider>\n  )\n}\n\nexport const useTask = () => {\n  const context = useContext(TaskContext)\n  if (!context) {\n    throw new Error(\"useTask must be used within a TaskProvider\")\n  }\n  return context\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}